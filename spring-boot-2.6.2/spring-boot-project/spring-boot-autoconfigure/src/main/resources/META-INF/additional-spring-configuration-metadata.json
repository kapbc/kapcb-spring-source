{
  "properties": [
    {
      "name": "server.compression.enabled",
      "description": "Whether response compression is enabled.",
      "defaultValue": false
    },
    {
      "name": "server.compression.excluded-user-agents",
      "description": "Comma-separated list of user agents for which responses should not be compressed."
    },
    {
      "name": "server.compression.mime-types",
      "description": "Comma-separated list of MIME types that should be compressed.",
      "defaultValue": [
        "text/html",
        "text/xml",
        "text/plain",
        "text/css",
        "text/javascript",
        "application/javascript",
        "application/json",
        "application/xml"
      ]
    },
    {
      "name": "server.compression.min-response-size",
      "description": "Minimum \"Content-Length\" value that is required for compression to be performed.",
      "defaultValue": "2KB"
    },
    {
      "name": "server.connection-timeout",
      "type": "java.time.Duration",
      "deprecation": {
        "reason": "Each server behaves differently. Use server specific properties instead.",
        "level": "error"
      }
    },
    {
      "name": "server.error.include-binding-errors",
      "defaultValue": "never"
    },
    {
      "name": "server.error.include-message",
      "defaultValue": "never"
    },
    {
      "name": "server.error.include-stacktrace",
      "defaultValue": "never"
    },
    {
      "name": "server.http2.enabled",
      "description": "Whether to enable HTTP/2 support, if the current environment supports it.",
      "defaultValue": false
    },
    {
      "name": "server.jetty.accesslog.date-format",
      "deprecation": {
        "replacement": "server.jetty.accesslog.custom-format",
        "level": "error"
      }
    },
    {
      "name": "server.jetty.accesslog.extended-format",
      "deprecation": {
        "replacement": "server.jetty.accesslog.format",
        "level": "error"
      }
    },
    {
      "name": "server.jetty.accesslog.format",
      "defaultValue": "ncsa"
    },
    {
      "name": "server.jetty.accesslog.locale",
      "deprecation": {
        "replacement": "server.jetty.accesslog.custom-format",
        "level": "error"
      }
    },
    {
      "name": "server.jetty.accesslog.log-cookies",
      "deprecation": {
        "replacement": "server.jetty.accesslog.custom-format",
        "level": "error"
      }
    },
    {
      "name": "server.jetty.accesslog.log-latency",
      "deprecation": {
        "replacement": "server.jetty.accesslog.custom-format",
        "level": "error"
      }
    },
    {
      "name": "server.jetty.accesslog.log-server",
      "deprecation": {
        "replacement": "server.jetty.accesslog.custom-format",
        "level": "error"
      }
    },
    {
      "name": "server.jetty.accesslog.time-zone",
      "deprecation": {
        "replacement": "server.jetty.accesslog.custom-format",
        "level": "error"
      }
    },
    {
      "name": "server.jetty.max-http-post-size",
      "type": "org.springframework.util.unit.DataSize",
      "deprecation": {
        "replacement": "server.jetty.max-http-form-post-size",
        "level": "error"
      }
    },
    {
      "name": "server.max-http-post-size",
      "type": "java.lang.Integer",
      "description": "Maximum size in bytes of the HTTP post content.",
      "defaultValue": 0,
      "deprecation": {
        "reason": "Use dedicated property for each container.",
        "level": "error"
      }
    },
    {
      "name": "server.port",
      "defaultValue": 8080
    },
    {
      "name": "server.servlet.encoding.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable http encoding support.",
      "defaultValue": true
    },
    {
      "name": "server.servlet.jsp.class-name",
      "description": "Class name of the servlet to use for JSPs. If registered is true and this class\n\t * is on the classpath then it will be registered.",
      "defaultValue": "org.apache.jasper.servlet.JspServlet"
    },
    {
      "name": "server.servlet.jsp.init-parameters",
      "description": "Init parameters used to configure the JSP servlet."
    },
    {
      "name": "server.servlet.jsp.registered",
      "description": "Whether the JSP servlet is registered.",
      "defaultValue": true
    },
    {
      "name": "server.servlet.path",
      "type": "java.lang.String",
      "description": "Path of the main dispatcher servlet.",
      "defaultValue": "/",
      "deprecation": {
        "replacement": "spring.mvc.servlet.path",
        "level": "error"
      }
    },
    {
      "name": "server.servlet.session.persistent",
      "description": "Whether to persist session data between restarts.",
      "defaultValue": false
    },
    {
      "name": "server.servlet.session.store-dir",
      "description": "Directory used to store session data."
    },
    {
      "name": "server.servlet.session.timeout",
      "description": "Session timeout. If a duration suffix is not specified, seconds will be used.",
      "defaultValue": "30m"
    },
    {
      "name": "server.servlet.session.tracking-modes",
      "description": "Session tracking modes."
    },
    {
      "name": "server.shutdown",
      "defaultValue": "immediate"
    },
    {
      "name": "server.ssl.ciphers",
      "description": "Supported SSL ciphers."
    },
    {
      "name": "server.ssl.client-auth",
      "description": "Client authentication mode. Requires a trust store."
    },
    {
      "name": "server.ssl.enabled",
      "description": "Whether to enable SSL support.",
      "defaultValue": true
    },
    {
      "name": "server.ssl.enabled-protocols",
      "description": "Enabled SSL protocols."
    },
    {
      "name": "server.ssl.key-alias",
      "description": "Alias that identifies the key in the key store."
    },
    {
      "name": "server.ssl.key-password",
      "description": "Password used to access the key in the key store."
    },
    {
      "name": "server.ssl.key-store",
      "description": "Path to the key store that holds the SSL certificate (typically a jks file)."
    },
    {
      "name": "server.ssl.key-store-password",
      "description": "Password used to access the key store."
    },
    {
      "name": "server.ssl.key-store-provider",
      "description": "Provider for the key store."
    },
    {
      "name": "server.ssl.key-store-type",
      "description": "Type of the key store."
    },
    {
      "name": "server.ssl.protocol",
      "description": "SSL protocol to use.",
      "defaultValue": "TLS"
    },
    {
      "name": "server.ssl.trust-store",
      "description": "Trust store that holds SSL certificates."
    },
    {
      "name": "server.ssl.trust-store-password",
      "description": "Password used to access the trust store."
    },
    {
      "name": "server.ssl.trust-store-provider",
      "description": "Provider for the trust store."
    },
    {
      "name": "server.ssl.trust-store-type",
      "description": "Type of the trust store."
    },
    {
      "name": "server.tomcat.max-http-post-size",
      "type": "org.springframework.util.unit.DataSize",
      "deprecation": {
        "replacement": "server.tomcat.max-http-form-post-size",
        "level": "error"
      }
    },
    {
      "name": "server.undertow.buffers-per-region",
      "type": "java.lang.Integer",
      "description": "Number of buffer per region.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "server.use-forward-headers",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Replaced to support additional strategies.",
        "replacement": "server.forward-headers-strategy",
        "level": "error"
      }
    },
    {
      "name": "spring.activemq.pool.create-connection-on-startup",
      "type": "java.lang.Boolean",
      "description": "Whether to create a connection on startup. Can be used to warm up the pool on startup.",
      "defaultValue": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.activemq.pool.expiry-timeout",
      "type": "java.time.Duration",
      "description": "Connection expiration timeout.",
      "defaultValue": "0ms",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.activemq.pool.maximum-active-session-per-connection",
      "deprecation": {
        "replacement": "spring.activemq.pool.max-sessions-per-connection"
      }
    },
    {
      "name": "spring.activemq.pool.reconnect-on-exception",
      "type": "java.lang.Boolean",
      "description": "Reset the connection when a \"JMSException\" occurs.",
      "defaultValue": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.aop.auto",
      "type": "java.lang.Boolean",
      "description": "Add @EnableAspectJAutoProxy.",
      "defaultValue": true
    },
    {
      "name": "spring.aop.proxy-target-class",
      "type": "java.lang.Boolean",
      "description": "Whether subclass-based (CGLIB) proxies are to be created (true), as opposed to standard Java interface-based proxies (false).",
      "defaultValue": true
    },
    {
      "name": "spring.application.admin.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable admin features for the application.",
      "defaultValue": false
    },
    {
      "name": "spring.application.admin.jmx-name",
      "type": "java.lang.String",
      "description": "JMX name of the application admin MBean.",
      "defaultValue": "org.springframework.boot:type=Admin,name=SpringApplication"
    },
    {
      "name": "spring.artemis.broker-url",
      "defaultValue": "tcp://localhost:61616"
    },
    {
      "name": "spring.artemis.pool.maximum-active-session-per-connection",
      "deprecation": {
        "replacement": "spring.artemis.pool.max-sessions-per-connection"
      }
    },
    {
      "name": "spring.autoconfigure.exclude",
      "type": "java.util.List<java.lang.Class>",
      "description": "Auto-configuration classes to exclude."
    },
    {
      "name": "spring.batch.initialize-schema",
      "defaultValue": "embedded"
    },
    {
      "name": "spring.batch.initializer.enabled",
      "type": "java.lang.Boolean",
      "description": "Create the required batch tables on startup if necessary. Enabled automatically\n if no custom table prefix is set or if a custom schema is configured.",
      "deprecation": {
        "replacement": "spring.batch.jdbc.initialize-schema",
        "level": "error"
      }
    },
    {
      "name": "spring.batch.jdbc.initialize-schema",
      "defaultValue": "embedded"
    },
    {
      "name": "spring.batch.job.enabled",
      "type": "java.lang.Boolean",
      "description": "Execute all Spring Batch jobs in the context on startup.",
      "defaultValue": true
    },
    {
      "name": "spring.couchbase.bootstrap-hosts",
      "type": "java.util.List<java.lang.String>",
      "description": "Couchbase nodes (host or IP address) to bootstrap from.",
      "deprecation": {
        "replacement": "spring.couchbase.connection-string",
        "level": "error"
      }
    },
    {
      "name": "spring.couchbase.bucket.name",
      "type": "java.lang.String",
      "description": "Name of the bucket to connect to.",
      "deprecation": {
        "reason": "A bucket is no longer auto-configured.",
        "level": "error"
      }
    },
    {
      "name": "spring.couchbase.bucket.password",
      "type": "java.lang.String",
      "description": "Password of the bucket.",
      "deprecation": {
        "reason": "A bucket is no longer auto-configured.",
        "level": "error"
      }
    },
    {
      "name": "spring.couchbase.env.bootstrap.http-direct-port",
      "type": "java.lang.Integer",
      "description": "Port for the HTTP bootstrap.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.couchbase.env.bootstrap.http-ssl-port",
      "type": "java.lang.Integer",
      "description": "Port for the HTTPS bootstrap.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.couchbase.env.endpoints.key-value",
      "type": "java.lang.Integer",
      "description": "Number of sockets per node against the key/value service.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.couchbase.env.endpoints.query",
      "type": "java.lang.Integer",
      "description": "Number of sockets per node against the query (N1QL) service.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.couchbase.env.endpoints.queryservice.max-endpoints",
      "type": "java.lang.Integer",
      "description": "Maximum number of sockets per node.",
      "deprecation": {
        "replacement": "spring.couchbase.env.io.max-endpoints",
        "level": "error"
      }
    },
    {
      "name": "spring.couchbase.env.endpoints.queryservice.min-endpoints",
      "type": "java.lang.Integer",
      "description": "Minimum number of sockets per node.",
      "deprecation": {
        "replacement": "spring.couchbase.env.io.min-endpoints",
        "level": "error"
      }
    },
    {
      "name": "spring.couchbase.env.endpoints.view",
      "type": "java.lang.Integer",
      "description": "Number of sockets per node against the view service.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.couchbase.env.endpoints.viewservice.max-endpoints",
      "type": "java.lang.Integer",
      "description": "Maximum number of sockets per node.",
      "deprecation": {
        "replacement": "spring.couchbase.env.io.max-endpoints",
        "level": "error"
      }
    },
    {
      "name": "spring.couchbase.env.endpoints.viewservice.min-endpoints",
      "type": "java.lang.Integer",
      "description": "Minimum number of sockets per node.",
      "deprecation": {
        "replacement": "spring.couchbase.env.io.min-endpoints",
        "level": "error"
      }
    },
    {
      "name": "spring.couchbase.env.timeouts.socket-connect",
      "type": "java.time.Duration",
      "description": "Socket connect connections timeout.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.dao.exceptiontranslation.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable the PersistenceExceptionTranslationPostProcessor.",
      "defaultValue": true
    },
    {
      "name": "spring.data.cassandra.compression",
      "defaultValue": "none"
    },
    {
      "name": "spring.data.cassandra.connection.connection-timeout",
      "defaultValue": "5s"
    },
    {
      "name": "spring.data.cassandra.connection.init-query-timeout",
      "defaultValue": "5s"
    },
    {
      "name": "spring.data.cassandra.contact-points",
      "defaultValue": [
        "127.0.0.1:9042"
      ]
    },
    {
      "name": "spring.data.cassandra.jmx-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable JMX reporting. Default to false as Cassandra JMX reporting is not compatible with Dropwizard Metrics.",
      "deprecation": {
        "reason": "Cassandra no longer provides JMX metrics.",
        "level": "error"
      }
    },
    {
      "name": "spring.data.cassandra.load-balancing-policy",
      "type": "java.lang.Class",
      "description": "Class name of the load balancing policy. The class must have a default constructor.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.data.cassandra.pool.max-queue-size",
      "type": "java.lang.Integer",
      "deprecation": {
        "replacement": "spring.data.cassandra.request.throttler.max-queue-size",
        "level": "error"
      }
    },
    {
      "name": "spring.data.cassandra.pool.pool-timeout",
      "type": "java.time.Duration",
      "description": "Pool timeout when trying to acquire a connection from a host's pool.",
      "deprecation": {
        "reason": "No longer available.",
        "level": "error"
      }
    },
    {
      "name": "spring.data.cassandra.reconnection-policy",
      "type": "java.lang.Class",
      "description": "Class name of the reconnection policy. The class must have a default constructor.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.data.cassandra.repositories.type",
      "type": "org.springframework.boot.autoconfigure.data.RepositoryType",
      "description": "Type of Cassandra repositories to enable.",
      "defaultValue": "auto"
    },
    {
      "name": "spring.data.cassandra.request.page-size",
      "defaultValue": 5000
    },
    {
      "name": "spring.data.cassandra.request.timeout",
      "defaultValue": "2s"
    },
    {
      "name": "spring.data.cassandra.request.throttler.type",
      "defaultValue": "none"
    },
    {
      "name": "spring.data.cassandra.retry-policy",
      "type": "java.lang.Class",
      "description": "Class name of the retry policy. The class must have a default constructor.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.data.cassandra.pool.heartbeat-interval",
      "defaultValue": "30s"
    },
    {
      "name": "spring.data.cassandra.pool.idle-timeout",
      "defaultValue": "5s"
    },
    {
      "name": "spring.data.couchbase.consistency",
      "type": "org.springframework.data.couchbase.core.query.Consistency",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.data.couchbase.repositories.type",
      "type": "org.springframework.boot.autoconfigure.data.RepositoryType",
      "description": "Type of Couchbase repositories to enable.",
      "defaultValue": "auto"
    },
    {
      "name": "spring.data.elasticsearch.client.reactive.endpoints",
      "defaultValue": [
        "localhost:9200"
      ]
    },
    {
      "name": "spring.data.elasticsearch.cluster-name",
      "type": "java.lang.String",
      "description": "Elasticsearch cluster name.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.data.elasticsearch.cluster-nodes",
      "type": "java.lang.String",
      "description": "Comma-separated list of cluster node addresses.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.data.elasticsearch.properties",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "description": "Additional properties used to configure the client.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.data.elasticsearch.repositories.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Elasticsearch repositories.",
      "defaultValue": true
    },
    {
      "name": "spring.data.jdbc.repositories.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable JDBC repositories.",
      "defaultValue": true
    },
    {
      "name": "spring.data.jpa.repositories.bootstrap-mode",
      "type": "org.springframework.data.repository.config.BootstrapMode",
      "description": "Bootstrap mode for JPA repositories.",
      "defaultValue": "default"
    },
    {
      "name": "spring.data.jpa.repositories.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable JPA repositories.",
      "defaultValue": true
    },
    {
      "name": "spring.data.ldap.repositories.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable LDAP repositories.",
      "defaultValue": true
    },
    {
      "name": "spring.data.mongodb.repositories.type",
      "type": "org.springframework.boot.autoconfigure.data.RepositoryType",
      "description": "Type of Mongo repositories to enable.",
      "defaultValue": "auto"
    },
    {
      "name": "spring.data.mongodb.uri",
      "defaultValue": "mongodb://localhost/test"
    },
    {
      "name": "spring.data.mongodb.uuid-representation",
      "defaultValue": "java-legacy"
    },
    {
      "name": "spring.data.neo4j.auto-index",
      "description": "Auto index mode.",
      "defaultValue": "none",
      "deprecation": {
        "reason": "Automatic index creation is no longer supported.",
        "level": "error"
      }
    },
    {
      "name": "spring.data.neo4j.embedded.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable embedded mode if the embedded driver is available.",
      "deprecation": {
        "reason": "Embedded mode is no longer supported, please use Testcontainers instead.",
        "level": "error"
      }
    },
    {
      "name": "spring.data.neo4j.open-in-view",
      "type": "java.lang.Boolean",
      "description": "Register OpenSessionInViewInterceptor that binds a Neo4j Session to the thread for the entire processing of the request.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.data.neo4j.password",
      "type": "java.lang.String",
      "description": "Login password of the server.",
      "deprecation": {
        "replacement": "spring.neo4j.authentication.password",
        "level": "warning"
      }
    },
    {
      "name": "spring.data.neo4j.repositories.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Neo4j repositories.",
      "defaultValue": true,
      "deprecation": {
        "replacement": "spring.data.neo4j.repositories.type",
        "level": "error"
      }
    },
    {
      "name": "spring.data.neo4j.repositories.type",
      "type": "org.springframework.boot.autoconfigure.data.RepositoryType",
      "description": "Type of Neo4j repositories to enable.",
      "defaultValue": "auto"
    },
    {
      "name": "spring.data.neo4j.uri",
      "type": "java.lang.String",
      "description": "URI used by the driver. Auto-detected by default.",
      "deprecation": {
        "replacement": "spring.neo4j.uri",
        "level": "warning"
      }
    },
    {
      "name": "spring.data.neo4j.use-native-types",
      "type": "java.lang.Boolean",
      "description": "Whether to use Neo4j native types wherever possible.",
      "deprecation": {
        "reason": "Native type support is now built-in.",
        "level": "error"
      }
    },
    {
      "name": "spring.data.neo4j.username",
      "type": "java.lang.String",
      "description": "Login user of the server.",
      "deprecation": {
        "replacement": "spring.neo4j.authentication.password",
        "level": "warning"
      }
    },
    {
      "name": "spring.data.r2dbc.repositories.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable R2DBC repositories.",
      "defaultValue": true
    },
    {
      "name": "spring.data.redis.repositories.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Redis repositories.",
      "defaultValue": true
    },
    {
      "name": "spring.data.rest.detection-strategy",
      "defaultValue": "default"
    },
    {
      "name": "spring.datasource.initialization-mode",
      "defaultValue": "embedded"
    },
    {
      "name": "spring.datasource.jmx-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable JMX support (if provided by the underlying pool).",
      "defaultValue": false,
      "deprecation": {
        "level": "error",
        "replacement": "spring.datasource.tomcat.jmx-enabled"
      }
    },
    {
      "name": "spring.elasticsearch.jest.connection-timeout",
      "type": "java.time.Duration",
      "description": "Connection timeout.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.elasticsearch.jest.multi-threaded",
      "type": "java.lang.Boolean",
      "description": "Whether to enable connection requests from multiple execution threads.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.elasticsearch.jest.password",
      "type": "java.lang.String",
      "description": "Login password.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.elasticsearch.jest.proxy.host",
      "type": "java.lang.String",
      "description": "Proxy host the HTTP client should use.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.elasticsearch.jest.proxy.port",
      "type": "java.lang.Integer",
      "description": "Proxy port the HTTP client should use.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.elasticsearch.jest.read-timeout",
      "type": "java.time.Duration",
      "description": "Read timeout.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.elasticsearch.jest.uris",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of the Elasticsearch instances to use.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.elasticsearch.jest.username",
      "type": "java.lang.String",
      "description": "Login username.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.elasticsearch.rest.uris",
      "defaultValue": [
        "http://localhost:9200"
      ]
    },
    {
      "name": "spring.elasticsearch.uris",
      "defaultValue": [
        "http://localhost:9200"
      ]
    },
    {
      "name": "spring.flyway.baseline-migration-prefix",
      "defaultValue": "B"
    },
    {
      "name": "spring.flyway.connect-retries-interval",
      "defaultValue": 120
    },
    {
      "name": "spring.flyway.dry-run-output",
      "type": "java.io.OutputStream",
      "deprecation": {
        "level": "error",
        "reason": "Flyway pro edition only."
      }
    },
    {
      "name": "spring.flyway.error-handlers",
      "type": "org.flywaydb.core.api.errorhandler.ErrorHandler[]",
      "deprecation": {
        "level": "error",
        "reason": "Flyway pro edition only."
      }
    },
    {
      "name": "spring.flyway.locations",
      "sourceType": "org.springframework.boot.autoconfigure.flyway.FlywayProperties",
      "defaultValue": [
        "classpath:db/migration"
      ]
    },
    {
      "name": "spring.flyway.lock-retry-count",
      "defaultValue": 50
    },
    {
      "name": "spring.flyway.script-placeholder-prefix",
      "defaultValue": "FP__"
    },
    {
      "name": "spring.flyway.script-placeholder-suffix",
      "defaultValue": "__"
    },
    {
      "name": "spring.flyway.sql-migration-suffix",
      "type": "java.lang.String",
      "deprecation": {
        "replacement": "spring.flyway.sql-migration-suffixes",
        "level": "error"
      }
    },
    {
      "name": "spring.flyway.sql-migration-suffixes",
      "sourceType": "org.springframework.boot.autoconfigure.flyway.FlywayProperties",
      "defaultValue": [
        ".sql"
      ]
    },
    {
      "name": "spring.flyway.undo-sql-migration-prefix",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "reason": "Flyway pro edition only."
      }
    },
    {
      "name": "spring.flyway.vault-secrets",
      "type": "java.util.List<java.lang.String>",
      "deprecation": {
        "level": "error",
        "reason": "Removed in the open source release of Flyway 7.12."
      }
    },
    {
      "name": "spring.flyway.vault-token",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "reason": "Removed in the open source release of Flyway 7.12."
      }
    },
    {
      "name": "spring.flyway.vault-url",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "reason": "Removed in the open source release of Flyway 7.12."
      }
    },
    {
      "name": "spring.freemarker.prefix",
      "defaultValue": ""
    },
    {
      "name": "spring.freemarker.suffix",
      "defaultValue": ".ftlh"
    },
    {
      "name": "spring.git.properties",
      "type": "java.lang.String",
      "description": "Resource reference to a generated git info properties file.",
      "deprecation": {
        "replacement": "spring.info.git.location",
        "level": "error"
      }
    },
    {
      "name": "spring.groovy.template.prefix",
      "defaultValue": ""
    },
    {
      "name": "spring.groovy.template.suffix",
      "defaultValue": ".tpl"
    },
    {
      "name": "spring.http.converters.preferred-json-mapper",
      "type": "java.lang.String",
      "description": "Preferred JSON mapper to use for HTTP message conversion. By default, auto-detected according to the environment.",
      "deprecation": {
        "replacement": "spring.mvc.converters.preferred-json-mapper",
        "level": "error"
      }
    },
    {
      "name": "spring.http.encoding.charset",
      "type": "java.nio.charset.Charset",
      "description": "Charset of HTTP requests and responses. Added to the Content-Type header if not set explicitly.",
      "deprecation": {
        "replacement": "server.servlet.encoding.charset",
        "level": "error"
      }
    },
    {
      "name": "spring.http.encoding.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable http encoding support.",
      "defaultValue": true,
      "deprecation": {
        "replacement": "server.servlet.encoding.enabled",
        "level": "error"
      }
    },
    {
      "name": "spring.http.encoding.force",
      "type": "java.lang.Boolean",
      "description": "Whether to force the encoding to the configured charset on HTTP requests and responses.",
      "defaultValue": false,
      "deprecation": {
        "replacement": "server.servlet.encoding.force",
        "level": "error"
      }
    },
    {
      "name": "spring.http.encoding.force-request",
      "type": "java.lang.Boolean",
      "description": "Whether to force the encoding to the configured charset on HTTP requests. Defaults to true when force has not been specified.",
      "defaultValue": true,
      "deprecation": {
        "replacement": "server.servlet.encoding.force-request",
        "level": "error"
      }
    },
    {
      "name": "spring.http.encoding.force-response",
      "type": "java.lang.Boolean",
      "description": "Whether to force the encoding to the configured charset on HTTP responses.",
      "defaultValue": false,
      "deprecation": {
        "replacement": "server.servlet.encoding.force-response",
        "level": "error"
      }
    },
    {
      "name": "spring.http.encoding.mapping",
      "type": "java.util.Map<java.util.Locale,java.nio.charset.Charset>",
      "description": "Locale in which to encode mapping.",
      "deprecation": {
        "replacement": "server.servlet.encoding.mapping",
        "level": "error"
      }
    },
    {
      "name": "spring.http.log-request-details",
      "type": "java.lang.Boolean",
      "description": "Whether logging of (potentially sensitive) request details at DEBUG and TRACE level is allowed.",
      "defaultValue": false,
      "deprecation": {
        "replacement": "spring.mvc.log-request-details",
        "level": "error"
      }
    },
    {
      "name": "spring.info.build.location",
      "defaultValue": "classpath:META-INF/build-info.properties"
    },
    {
      "name": "spring.info.git.location",
      "defaultValue": "classpath:git.properties"
    },
    {
      "name": "spring.integration.jdbc.initialize-schema",
      "defaultValue": "embedded"
    },
    {
      "name": "spring.jackson.constructor-detector",
      "defaultValue": "default"
    },
    {
      "name": "spring.jackson.joda-date-time-format",
      "type": "java.lang.String",
      "description": "Joda date time format string. If not configured, \"date-format\" is used as a fallback if it is configured with a format string.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jersey.type",
      "defaultValue": "servlet"
    },
    {
      "name": "spring.jmx.default-domain",
      "type": "java.lang.String",
      "description": "JMX domain name."
    },
    {
      "name": "spring.jmx.enabled",
      "type": "java.lang.Boolean",
      "description": "Expose management beans to the JMX domain.",
      "defaultValue": false
    },
    {
      "name": "spring.jmx.server",
      "type": "java.lang.String",
      "description": "MBeanServer bean name.",
      "defaultValue": "mbeanServer"
    },
    {
      "name": "spring.jmx.unique-names",
      "type": "java.lang.Boolean",
      "description": "Whether unique runtime object names should be ensured.",
      "defaultValue": false
    },
    {
      "name": "spring.jpa.open-in-view",
      "defaultValue": true
    },
    {
      "name": "spring.jta.bitronix.properties.allow-multiple-lrc",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.asynchronous2-pc",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.background-recovery-interval",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.background-recovery-interval-seconds",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.current-node-only-recovery",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.debug-zero-resource-transaction",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.default-transaction-timeout",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.disable-jmx",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.exception-analyzer",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.filter-log-status",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.force-batching-enabled",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.forced-write-enabled",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.graceful-shutdown-interval",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.jndi-transaction-synchronization-registry-name",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.jndi-user-transaction-name",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.journal",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.log-part1-filename",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.log-part2-filename",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.max-log-size-in-mb",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.resource-configuration-filename",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.server-id",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.skip-corrupted-logs",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.bitronix.properties.warn-about-zero-resource-transaction",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.jta.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable JTA support.",
      "defaultValue": true
    },
    {
      "name": "spring.jta.narayana.default-timeout",
      "type": "java.time.Duration",
      "description": "Transaction timeout. If a duration suffix is not specified, seconds will be used.",
      "defaultValue": "60s",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.expiry-scanners",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of expiry scanners.",
      "defaultValue": [
        "com.arjuna.ats.internal.arjuna.recovery.ExpiredTransactionStatusManagerScanner"
      ],
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.log-dir",
      "type": "java.lang.String",
      "description": "Transaction object store directory.",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.one-phase-commit",
      "type": "java.lang.Boolean",
      "description": "Whether to enable one phase commit optimization.",
      "defaultValue": true,
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.periodic-recovery-period",
      "type": "java.time.Duration",
      "description": "Interval in which periodic recovery scans are performed. If a duration suffix is not specified, seconds will be used.",
      "defaultValue": "120s",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.recovery-backoff-period",
      "type": "java.time.Duration",
      "description": "Back off period between first and second phases of the recovery scan. If a duration suffix is not specified, seconds will be used.",
      "defaultValue": "10s",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.recovery-db-pass",
      "type": "java.lang.String",
      "description": "Database password to be used by the recovery manager.",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.recovery-db-user",
      "type": "java.lang.String",
      "description": "Database username to be used by the recovery manager.",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.recovery-jms-pass",
      "type": "java.lang.String",
      "description": "JMS password to be used by the recovery manager.",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.recovery-jms-user",
      "type": "java.lang.String",
      "description": "JMS username to be used by the recovery manager.",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.recovery-modules",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of recovery modules.",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.transaction-manager-id",
      "type": "java.lang.String",
      "description": "Unique transaction manager id.",
      "defaultValue": "1",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.xa-resource-orphan-filters",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of orphan filters.",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.kafka.admin.ssl.keystore-location",
      "type": "org.springframework.core.io.Resource",
      "description": "Location of the key store file.",
      "deprecation": {
        "replacement": "spring.kafka.admin.ssl.key-store-location",
        "level": "error"
      }
    },
    {
      "name": "spring.kafka.admin.ssl.keystore-password",
      "type": "java.lang.String",
      "description": "Store password for the key store file.",
      "deprecation": {
        "replacement": "spring.kafka.admin.ssl.key-store-password",
        "level": "error"
      }
    },
    {
      "name": "spring.kafka.admin.ssl.truststore-location",
      "type": "org.springframework.core.io.Resource",
      "description": "Location of the trust store file.",
      "deprecation": {
        "replacement": "spring.kafka.admin.ssl.trust-store-location",
        "level": "error"
      }
    },
    {
      "name": "spring.kafka.admin.ssl.truststore-password",
      "type": "java.lang.String",
      "description": "Store password for the trust store file.",
      "deprecation": {
        "replacement": "spring.kafka.admin.ssl.trust-store-password",
        "level": "error"
      }
    },
    {
      "name": "spring.kafka.consumer.isolation-level",
      "defaultValue": "read-uncommitted"
    },
    {
      "name": "spring.kafka.consumer.ssl.keystore-location",
      "type": "org.springframework.core.io.Resource",
      "description": "Location of the key store file.",
      "deprecation": {
        "replacement": "spring.kafka.consumer.ssl.key-store-location",
        "level": "error"
      }
    },
    {
      "name": "spring.kafka.consumer.ssl.keystore-password",
      "type": "java.lang.String",
      "description": "Store password for the key store file.",
      "deprecation": {
        "replacement": "spring.kafka.consumer.ssl.key-store-password",
        "level": "error"
      }
    },
    {
      "name": "spring.kafka.consumer.ssl.truststore-location",
      "type": "org.springframework.core.io.Resource",
      "description": "Location of the trust store file.",
      "deprecation": {
        "replacement": "spring.kafka.consumer.ssl.trust-store-location",
        "level": "error"
      }
    },
    {
      "name": "spring.kafka.consumer.ssl.truststore-password",
      "type": "java.lang.String",
      "description": "Store password for the trust store file.",
      "deprecation": {
        "replacement": "spring.kafka.consumer.ssl.trust-store-password",
        "level": "error"
      }
    },
    {
      "name": "spring.kafka.jaas.control-flag",
      "defaultValue": "required"
    },
    {
      "name": "spring.kafka.listener.type",
      "defaultValue": "single"
    },
    {
      "name": "spring.kafka.producer.ssl.keystore-location",
      "type": "org.springframework.core.io.Resource",
      "description": "Location of the key store file.",
      "deprecation": {
        "replacement": "spring.kafka.producer.ssl.key-store-location",
        "level": "error"
      }
    },
    {
      "name": "spring.kafka.producer.ssl.keystore-password",
      "type": "java.lang.String",
      "description": "Store password for the key store file.",
      "deprecation": {
        "replacement": "spring.kafka.producer.ssl.key-store-password",
        "level": "error"
      }
    },
    {
      "name": "spring.kafka.producer.ssl.truststore-location",
      "type": "org.springframework.core.io.Resource",
      "description": "Location of the trust store file.",
      "deprecation": {
        "replacement": "spring.kafka.producer.ssl.trust-store-location",
        "level": "error"
      }
    },
    {
      "name": "spring.kafka.producer.ssl.truststore-password",
      "type": "java.lang.String",
      "description": "Store password for the trust store file.",
      "deprecation": {
        "replacement": "spring.kafka.producer.ssl.trust-store-password",
        "level": "error"
      }
    },
    {
      "name": "spring.kafka.ssl.keystore-location",
      "type": "org.springframework.core.io.Resource",
      "description": "Location of the key store file.",
      "deprecation": {
        "replacement": "spring.kafka.ssl.key-store-location",
        "level": "error"
      }
    },
    {
      "name": "spring.kafka.ssl.keystore-password",
      "type": "java.lang.String",
      "description": "Store password for the key store file.",
      "deprecation": {
        "replacement": "spring.kafka.ssl.key-store-password",
        "level": "error"
      }
    },
    {
      "name": "spring.kafka.ssl.truststore-location",
      "type": "org.springframework.core.io.Resource",
      "description": "Location of the trust store file.",
      "deprecation": {
        "replacement": "spring.kafka.ssl.trust-store-location",
        "level": "error"
      }
    },
    {
      "name": "spring.kafka.ssl.truststore-password",
      "type": "java.lang.String",
      "description": "Store password for the trust store file.",
      "deprecation": {
        "replacement": "spring.kafka.ssl.trust-store-password",
        "level": "error"
      }
    },
    {
      "name": "spring.kafka.streams.cache-max-bytes-buffering",
      "type": "java.lang.Integer",
      "deprecation": {
        "replacement": "spring.kafka.streams.cache-max-size-buffering",
        "level": "error"
      }
    },
    {
      "name": "spring.liquibase.check-change-log-location",
      "type": "java.lang.Boolean",
      "description": "Check the change log location exists.",
      "defaultValue": true,
      "deprecation": {
        "reason": "Liquibase has it's own check that checks if the change log location exists making this property redundant.",
        "level": "error"
      }
    },
    {
      "name": "spring.mail.test-connection",
      "description": "Whether to test that the mail server is available on startup.",
      "sourceType": "org.springframework.boot.autoconfigure.mail.MailProperties",
      "type": "java.lang.Boolean",
      "defaultValue": false
    },
    {
      "name": "spring.mongodb.embedded.features",
      "defaultValue": [
        "sync_delay"
      ]
    },
    {
      "name": "spring.mustache.prefix",
      "defaultValue": "classpath:/templates/"
    },
    {
      "name": "spring.mustache.suffix",
      "defaultValue": ".mustache"
    },
    {
      "name": "spring.mvc.converters.preferred-json-mapper",
      "type": "java.lang.String",
      "description": "Preferred JSON mapper to use for HTTP message conversion. By default, auto-detected according to the environment."
    },
    {
      "name": "spring.mvc.favicon.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable resolution of favicon.ico.",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.mvc.formcontent.filter.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Spring's FormContentFilter.",
      "defaultValue": true
    },
    {
      "name": "spring.mvc.formcontent.putfilter.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Spring's HttpPutFormContentFilter.",
      "defaultValue": true,
      "deprecation": {
        "replacement": "spring.mvc.formcontent.filter.enabled",
        "level": "error"
      }
    },
    {
      "name": "spring.mvc.hiddenmethod.filter.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Spring's HiddenHttpMethodFilter.",
      "defaultValue": false
    },
    {
      "name": "spring.mvc.locale",
      "type": "java.util.Locale",
      "deprecation": {
        "replacement": "spring.web.locale",
        "level": "error"
      }
    },
    {
      "name": "spring.mvc.locale-resolver",
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver",
      "deprecation": {
        "replacement": "spring.web.locale-resolver",
        "level": "error"
      }
    },
    {
      "name": "spring.mvc.pathmatch.matching-strategy",
      "defaultValue": "path-pattern-parser"
    },
    {
      "name": "spring.neo4j.security.trust-strategy",
      "defaultValue": "trust-system-ca-signed-certificates"
    },
    {
      "name": "spring.neo4j.uri",
      "defaultValue": "bolt://localhost:7687"
    },
    {
      "name": "spring.quartz.jdbc.comment-prefix",
      "defaultValue": [
        "#",
        "--"
      ]
    },
    {
      "name": "spring.quartz.jdbc.initialize-schema",
      "defaultValue": "embedded"
    },
    {
      "name": "spring.quartz.job-store-type",
      "defaultValue": "memory"
    },
    {
      "name": "spring.quartz.scheduler-name",
      "defaultValue": "quartzScheduler"
    },
    {
      "name": "spring.r2dbc.pool.validation-depth",
      "defaultValue": "local"
    },
    {
      "name": "spring.rabbitmq.address-shuffle-mode",
      "defaultValue": "none"
    },
    {
      "name": "spring.rabbitmq.cache.connection.mode",
      "defaultValue": "channel"
    },
    {
      "name": "spring.rabbitmq.dynamic",
      "type": "java.lang.Boolean",
      "description": "Whether to create an AmqpAdmin bean.",
      "defaultValue": true
    },
    {
      "name": "spring.rabbitmq.listener.simple.transaction-size",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.rabbitmq.listener.type",
      "defaultValue": "simple"
    },
    {
      "name": "spring.rabbitmq.publisher-confirms",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.rabbitmq.template.queue",
      "type": "java.lang.String",
      "deprecation": {
        "replacement": "spring.rabbitmq.template.default-receive-queue",
        "level": "error"
      }
    },
    {
      "name": "spring.reactor.stacktrace-mode.enabled",
      "description": "Whether Reactor should collect stacktrace information at runtime.",
      "defaultValue": false,
      "deprecation": {
        "replacement": "spring.reactor.debug-agent.enabled"
      }
    },
    {
      "name": "spring.resources.add-mappings",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.add-mappings",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.cache-private",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.cache-private",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.cache-public",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.cache-public",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.max-age",
      "type": "java.time.Duration",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.max-age",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.must-revalidate",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.must-revalidate",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.no-cache",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.no-cache",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.no-store",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.no-store",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.no-transform",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.no-transform",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.proxy-revalidate",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.proxy-revalidate",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.s-max-age",
      "type": "java.time.Duration",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.s-max-age",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.stale-if-error",
      "type": "java.time.Duration",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.stale-if-error",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.stale-while-revalidate",
      "type": "java.time.Duration",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.stale-while-revalidate",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.period",
      "type": "java.time.Duration",
      "deprecation": {
        "replacement": "spring.web.resources.cache.period",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.use-last-modified",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.cache.use-last-modified",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.cache",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.chain.cache",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.compressed",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.chain.compressed",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.enabled",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.chain.enabled",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.gzipped",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.chain.compressed",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.html-application-cache",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.strategy.content.enabled",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.chain.strategy.content.enabled",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.strategy.content.paths",
      "type": "java.lang.String[]",
      "deprecation": {
        "replacement": "spring.web.resources.chain.strategy.content.paths",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.strategy.fixed.enabled",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.chain.strategy.fixed.enabled",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.strategy.fixed.paths",
      "type": "java.lang.String[]",
      "deprecation": {
        "replacement": "spring.web.resources.chain.strategy.fixed.paths",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.strategy.fixed.version",
      "type": "java.lang.String",
      "deprecation": {
        "replacement": "spring.web.resources.chain.strategy.fixed.version",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.static-locations",
      "type": "java.lang.String[]",
      "deprecation": {
        "replacement": "spring.web.resources.static-locations",
        "level": "error"
      }
    },
    {
      "name": "spring.rsocket.server.transport",
      "defaultValue": "tcp"
    },
    {
      "name": "spring.security.filter.dispatcher-types",
      "defaultValue": [
        "async",
        "error",
        "request"
      ]
    },
    {
      "name": "spring.security.filter.order",
      "defaultValue": -100
    },
    {
      "name": "spring.session.hazelcast.flush-mode",
      "defaultValue": "on-save"
    },
    {
      "name": "spring.session.hazelcast.save-mode",
      "defaultValue": "on-set-attribute"
    },
    {
      "name": "spring.session.jdbc.flush-mode",
      "defaultValue": "on-save"
    },
    {
      "name": "spring.session.jdbc.initialize-schema",
      "defaultValue": "embedded"
    },
    {
      "name": "spring.session.jdbc.save-mode",
      "defaultValue": "on-set-attribute"
    },
    {
      "name": "spring.session.redis.configure-action",
      "defaultValue": "notify-keyspace-events"
    },
    {
      "name": "spring.session.redis.flush-mode",
      "defaultValue": "on-save"
    },
    {
      "name": "spring.session.redis.save-mode",
      "defaultValue": "on-set-attribute"
    },
    {
      "name": "spring.session.servlet.filter-dispatcher-types",
      "defaultValue": [
        "async",
        "error",
        "request"
      ]
    },
    {
      "name": "spring.sql.init.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether basic script-based initialization of an SQL database is enabled.",
      "defaultValue": true,
      "deprecation": {
        "replacement": "spring.sql.init.mode",
        "level": "warning"
      }
    },
    {
      "name": "spring.sql.init.mode",
      "defaultValue": "embedded"
    },
    {
      "name": "spring.thymeleaf.prefix",
      "defaultValue": "classpath:/templates/"
    },
    {
      "name": "spring.thymeleaf.suffix",
      "defaultValue": ".html"
    },
    {
      "name": "spring.web.locale-resolver",
      "defaultValue": "accept-header"
    },
    {
      "name": "spring.webflux.hiddenmethod.filter.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Spring's HiddenHttpMethodFilter.",
      "defaultValue": false
    },
    {
      "name": "spring.webflux.session.timeout",
      "defaultValue": "30m"
    },
    {
      "name": "spring.webservices.wsdl-locations",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of locations of WSDLs and accompanying XSDs to be exposed as beans."
    },
    {
      "name": "spring.netty.leak-detection",
      "defaultValue": "simple"
    }
  ],
  "hints": [
    {
      "name": "server.servlet.jsp.class-name",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "javax.servlet.http.HttpServlet"
          }
        }
      ]
    },
    {
      "name": "server.tomcat.accesslog.encoding",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "java.nio.charset.Charset"
          }
        }
      ]
    },
    {
      "name": "server.tomcat.accesslog.locale",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "java.util.Locale"
          }
        }
      ]
    },
    {
      "name": "server.tomcat.relaxed-path-chars",
      "values": [
        {
          "value": "<"
        },
        {
          "value": ">"
        },
        {
          "value": "["
        },
        {
          "value": "\\"
        },
        {
          "value": "]"
        },
        {
          "value": "^"
        },
        {
          "value": "`"
        },
        {
          "value": "{"
        },
        {
          "value": "|"
        },
        {
          "value": "}"
        }
      ]
    },
    {
      "name": "server.tomcat.relaxed-query-chars",
      "values": [
        {
          "value": "<"
        },
        {
          "value": ">"
        },
        {
          "value": "["
        },
        {
          "value": "\\"
        },
        {
          "value": "]"
        },
        {
          "value": "^"
        },
        {
          "value": "`"
        },
        {
          "value": "{"
        },
        {
          "value": "|"
        },
        {
          "value": "}"
        }
      ]
    },
    {
      "name": "spring.cache.jcache.provider",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "javax.cache.spi.CachingProvider"
          }
        }
      ]
    },
    {
      "name": "spring.data.cassandra.schema-action",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "org.springframework.data.cassandra.config.SchemaAction"
          }
        }
      ]
    },
    {
      "name": "spring.data.mongodb.field-naming-strategy",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "org.springframework.data.mapping.model.FieldNamingStrategy"
          }
        }
      ]
    },
    {
      "name": "spring.data.mongodb.grid-fs-database",
      "type": "java.lang.String",
      "deprecation": {
        "replacement": "spring.data.mongodb.gridfs.database",
        "level": "error"
      }
    },
    {
      "name": "spring.datasource.data",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "java.util.List<org.springframework.core.io.Resource>"
          }
        }
      ]
    },
    {
      "name": "spring.datasource.driver-class-name",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "java.sql.Driver"
          }
        }
      ]
    },
    {
      "name": "spring.datasource.schema",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "java.util.List<org.springframework.core.io.Resource>"
          }
        }
      ]
    },
    {
      "name": "spring.datasource.xa.data-source-class-name",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "javax.sql.XADataSource"
          }
        }
      ]
    },
    {
      "name": "spring.jmx.server",
      "providers": [
        {
          "name": "spring-bean-reference",
          "parameters": {
            "target": "javax.management.MBeanServer"
          }
        }
      ]
    },
    {
      "name": "spring.jpa.hibernate.ddl-auto",
      "values": [
        {
          "value": "none",
          "description": "Disable DDL handling."
        },
        {
          "value": "validate",
          "description": "Validate the schema, make no changes to the database."
        },
        {
          "value": "update",
          "description": "Update the schema if necessary."
        },
        {
          "value": "create",
          "description": "Create the schema and destroy previous data."
        },
        {
          "value": "create-drop",
          "description": "Create and then destroy the schema at the end of the session."
        }
      ]
    },
    {
      "name": "spring.jpa.hibernate.naming.implicit-strategy",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "org.hibernate.boot.model.naming.ImplicitNamingStrategy"
          }
        }
      ]
    },
    {
      "name": "spring.jpa.hibernate.naming.physical-strategy",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "org.hibernate.boot.model.naming.PhysicalNamingStrategy"
          }
        }
      ]
    },
    {
      "name": "spring.kafka.consumer.auto-offset-reset",
      "values": [
        {
          "value": "earliest",
          "description": "Automatically reset the offset to the earliest offset."
        },
        {
          "value": "latest",
          "description": "Automatically reset the offset to the latest offset."
        },
        {
          "value": "none",
          "description": "Throw exception to the consumer if no previous offset is found for the consumer's group."
        },
        {
          "value": "exception",
          "description": "Throw exception to the consumer."
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.kafka.consumer.key-deserializer",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "org.apache.kafka.common.serialization.Deserializer"
          }
        }
      ]
    },
    {
      "name": "spring.kafka.consumer.value-deserializer",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "org.apache.kafka.common.serialization.Deserializer"
          }
        }
      ]
    },
    {
      "name": "spring.kafka.producer.key-serializer",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "org.apache.kafka.common.serialization.Serializer"
          }
        }
      ]
    },
    {
      "name": "spring.kafka.producer.value-serializer",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "org.apache.kafka.common.serialization.Serializer"
          }
        }
      ]
    },
    {
      "name": "spring.liquibase.change-log",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "org.springframework.core.io.Resource"
          }
        }
      ]
    },
    {
      "name": "spring.mvc.converters.preferred-json-mapper",
      "values": [
        {
          "value": "gson"
        },
        {
          "value": "jackson"
        },
        {
          "value": "jsonb"
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.mvc.format.date",
      "values": [
        {
          "value": "dd/MM/yyyy",
          "description": "Example date format. Any format supported by DateTimeFormatter.parse can be used."
        },
        {
          "value": "iso",
          "description": "ISO-8601 extended local date format."
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.mvc.format.date-time",
      "values": [
        {
          "value": "yyyy-MM-dd HH:mm:ss",
          "description": "Example date-time format. Any format supported by DateTimeFormatter.parse can be used."
        },
        {
          "value": "iso",
          "description": "ISO-8601 extended local date-time format."
        },
        {
          "value": "iso-offset",
          "description": "ISO offset date-time format."
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.mvc.format.time",
      "values": [
        {
          "value": "HH:mm:ss",
          "description": "Example time format. Any format supported by DateTimeFormatter.parse can be used."
        },
        {
          "value": "iso",
          "description": "ISO-8601 extended local time format."
        },
        {
          "value": "iso-offset",
          "description": "ISO offset time format."
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.sql.init.data-locations",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "java.util.List<org.springframework.core.io.Resource>"
          }
        }
      ]
    },
    {
      "name": "spring.sql.init.schema-locations",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "java.util.List<org.springframework.core.io.Resource>"
          }
        }
      ]
    },
    {
      "name": "spring.webflux.format.date",
      "values": [
        {
          "value": "dd/MM/yyyy",
          "description": "Example date format. Any format supported by DateTimeFormatter.parse can be used."
        },
        {
          "value": "iso",
          "description": "ISO-8601 extended local date format."
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.webflux.format.date-time",
      "values": [
        {
          "value": "yyyy-MM-dd HH:mm:ss",
          "description": "Example date-time format. Any format supported by DateTimeFormatter.parse can be used."
        },
        {
          "value": "iso",
          "description": "ISO-8601 extended local date-time format."
        },
        {
          "value": "iso-offset",
          "description": "ISO offset date-time format."
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.webflux.format.time",
      "values": [
        {
          "value": "HH:mm:ss",
          "description": "Example time format. Any format supported by DateTimeFormatter.parse can be used."
        },
        {
          "value": "iso",
          "description": "ISO-8601 extended local time format."
        },
        {
          "value": "iso-offset",
          "description": "ISO offset time format."
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    }
  ]
}
