plugins {
	id 'org.springframework.boot' version '{version}'
}

if (project.hasProperty('applyJavaPlugin')) {
	apply plugin: 'java'
}

task('taskExists') {
	doFirst {
		println "${taskName} exists = ${tasks.findByName(taskName) != null}"
	}
}

task('javaCompileEncoding') {
	doFirst {
		tasks.withType(JavaCompile) {
			println "${name} = ${options.encoding}"
		}
	}
}

task('configurationExists') {
	doFirst {
		println "${configurationName} exists = ${configurations.findByName(configurationName) != null}"
	}
}

task('configurationAttributes') {
	doFirst {
		def attributes = configurations.findByName(configurationName).attributes
		println "${attributes.keySet().size()} ${configurationName} attributes:"		
		attributes.keySet().each { attribute ->
			println "    ${attribute}: ${attributes.getAttribute(attribute)}" 
		}
	}
}

task('configurationResolvabilityAndConsumability') {
	if (project.hasProperty("configurationName")) {
		Configuration configuration = configurations.findByName(configurationName)
		def canBeResolved = configuration.canBeResolved
		def canBeConsumed = configuration.canBeConsumed
		doFirst {
			println "canBeResolved: ${canBeResolved}"
			println "canBeConsumed: ${canBeConsumed}"
		}
	}
}